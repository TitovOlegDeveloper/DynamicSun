@{
    ViewData["Title"] = "Просмотр погоды";


}
@model DynamicSun.Dal.Query.WeatherQuery





<div class="text-center bg-image h-auto d-flex justify-content-center align-items-center flex-column ">
    <h1 class="display-4 text-white mt-5  fw-bold ">@ViewData["Title"]</h1>

    <a class="nav-link text-white bg-gradient fs-2 mt-5 mb-3" asp-area="" asp-controller="Home" asp-action="Index">Назад</a>
</div>
<div class="d-flex align-content-center flex-column align-items-center m-3">

    <table id="dataTable" class="table table-bordered table-striped w-75">
        <thead>
            <tr>
                <th>Дата</th>
                <th>Время</th>
                <th>Temperature</th>
                <th>AirHumidity</th>
                <th>DewPoint</th>
                <th>Pressure</th>
                <th>Wind</th>
                <th>WindSpeed</th>
                <th>Cloudiness</th>
                <th>CloudLimit</th>
                <th>HorizontalVisibility</th>
                <th>Appearance</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
    <p id="messageDisplay">@ViewBag.Message </p>
    <p>
        <button class="border-0 bg-white" id="prevPage">Назад</button>

        <button  class="border-0 bg-white"  id="nextPage">Далее</button>

    </p>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        let page = 0;
       
     

                   document.getElementById("nextPage").addEventListener("click", function() {

                       page += 1;
                       loadAndDisplayData(page);
                       
      
        });

           document.getElementById("prevPage").addEventListener("click", function() {
                page -=1;
                loadAndDisplayData(page);
        });

        document.addEventListener("DOMContentLoaded", function() {
        
          loadAndDisplayData(page); 
        });

            function GetCountRows() {
            return fetch('@Url.Action("GetCountWeather", "Unload")')
                .then(response => {
                    if (response.ok) {
                        return response.text(); 
                    } else {
                        throw new Error('Произошла ошибка');
                    }
                })
                .then(text => {  
                    const count = parseInt(text, 10); 
                    if (isNaN(count)) {
                        console.error("Ошибка: Не получается преобразовать значение в число.");
                        return null; 
                    }
                    return count; 
                })
                .catch(error => {
                    console.error('Ошибка:', error);
                    return null;  
                });
        }


        function loadAndDisplayData(n) {
             const table = document.getElementById("dataTable");
          const tbody = table.querySelector("tbody");
           let countRows = 0;
        let totalPages = 0;


          


          function renameKey(obj, oldKey, newKey) {
            if (obj.hasOwnProperty(oldKey)) {
              obj[newKey] = obj[oldKey];
              delete obj[oldKey];
            }
          }

            fetch('/Unload/UnloadReport?pageNum=' + n)
              .then(response => {
                if (response.ok) {
                  return response.json();
                } else {
                  throw new Error('Плохой ответ');
                }
              })
              .then(data => {
                tbody.innerHTML = "";

                if (data && data.length > 0) {
         
                         GetCountRows()
        .then(countRows => {
            if (countRows === null) {
                console.error("Нет записей");
                return;
            }

            totalPages = Math.ceil(countRows / 10);


            document.getElementById("nextPage").disabled = (page >= totalPages - 1);
            document.getElementById("prevPage").disabled = (page <= 0);
        });
                  const columnNames = Object.keys(data[0]).map(key => {
                    if (key === "Date") {
                      return "Дата"; 
                    }
                    else if(key == "Time")
                    {
                        return "Время (московское)";
                    }
                     else if(key == "Temperature")
                    {
                        return "Т";
                    }
                     else if(key == "AirHumidity")
                     {
                        return "Влажность воздуха";
                    }
                     else if(key == "DewPoint")
                     {
                        return "Точка росы";
                    }
                     else if(key == "Pressure")
                     {
                        return "Атм. давление";
                    }
                    else if(key == "Wind")
                     {
                        return "Направление ветра";
                    }
                    else if(key == "WindSpeed")
                     {
                        return "Скорость ветра";
                    }
                    else if(key == "Cloudiness")
                     {
                        return "Облачность";
                    }
                    else if(key == "CloudLimit")
                     {
                        return "Нижняя граница облачности";
                    }
                    else if(key == "HorizontalVisibility")
                     {
                        return "Горизонтальная видимость";
                    }
                    else if(key == "Appearance")
                     {
                        return "Погодные явления";
                    }
                    return key; 
                  });



                  const thead = table.querySelector("thead");
                  thead.innerHTML = ""; 
                  const headerRow = document.createElement("tr");
                  columnNames.forEach(columnName => {
                    const th = document.createElement("th");
                    th.textContent = columnName;
                    headerRow.appendChild(th);
                  });
                  thead.appendChild(headerRow);

                  data.forEach(item => {
                 
                    renameKey(item, "Date", "Дата");
                    renameKey(item, "Time", "Время (московское)");
                    renameKey(item, "Temperature", "Т");
                    renameKey(item, "AirHumidity", "Влажность воздуха");
                    renameKey(item, "DewPoint", "Точка росы");
                    renameKey(item, "Pressure", "Атм. давление");
                    renameKey(item, "Wind", "Направление ветра");
                    renameKey(item, "WindSpeed", "Скорость ветра");
                    renameKey(item, "Cloudiness", "Облачность");
                    renameKey(item, "CloudLimit", "Нижняя граница облачности");
                    renameKey(item, "HorizontalVisibility", "Горизонтальная видимость");
                    renameKey(item, "Appearance", "Погодные явления");

                    const tr = document.createElement("tr");
                    columnNames.forEach(columnName => {
                      const td = document.createElement("td");
                      td.textContent = item[columnName] || ""; 
                      tr.appendChild(td);
                    });
                    tbody.appendChild(tr);
                  });
                } else {
                  const noDataRow = document.createElement("tr");
                  const noDataCell = document.createElement("td");
                  noDataCell.setAttribute("colspan", columnNames.length);
                  noDataCell.textContent = "Нет данных";
                  noDataRow.appendChild(noDataCell);
                  tbody.appendChild(noDataRow);

                }
              })
              .catch(error => {
                document.getElementById("messageDisplay").textContent = "Нет записей :(";
              });
          }
    </script>
}


